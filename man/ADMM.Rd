% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/admm.R
\name{ADMM}
\alias{ADMM}
\title{ADMM}
\usage{
ADMM(G, c, n, tau = 0.35, gamma = 0.75, tol = 1e-04, maxiter,
  quiet = TRUE)
}
\arguments{
\item{G:}{sampled binary matrix}

\item{c:}{natural number used to calculate number of rows in dense submatrix}

\item{n:}{number of columns in dense submatrix}

\item{gamma:}{l1 regularization parameter}

\item{tau:}{penalty parameter for equality constraint violation}

\item{tol:}{stopping tolerance in algorithm}

\item{maxiter:}{maximum number of iterations of the algorithm to run}

\item{quiet:}{toggles between displaying intermediate statistics}
}
\value{
Rank one matrix with mn nonzero entries, matrix Y that is used to count the number of disagreements between G and X
}
\description{
Iteratively solves the convex optimization problem using ADMM.
}
\details{
min     |X|_* + gamma* |Y|_1 + 1_Omega_W (W) + 1_Omega_Q (Q) + 1_Omega_Z (Z)
      st      X - Y = 0
              X = W
              X = Z

where Omega_W (W), Omega_Q (Q), Omega_Z (Z) are the sets:
      Omega_W = {W in R^MxN | e^TWe = mn}
      Omega_Q = {Q in R^MxN | Projection of Q on not N = 0}
      Omega_Z = {Z in R^MxN | Z_ij <= 1 for all (i,j) in M x N}
1_S is the indicator function of the set S in R^MxN such that 1_S(X) = 0 if X in S and +infinity otherwise
}
